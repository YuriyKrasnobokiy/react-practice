{"version":3,"file":"static/js/949.5cc2e1bf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Product/Product.module.css?fe49","components/Product/Product.jsx","webpack://react-homework-template/./src/components/App.module.css?6c4d","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ProductForm/ProductForm.module.css?021d","components/ProductForm/ProductForm.jsx","../node_modules/nanoid/index.browser.js","components/Modal/Modal.Styled.js","components/Modal/Modal.jsx","pages/ProductsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"product\":\"Product_product__hQeO1\",\"productTitle\":\"Product_productTitle__6HXej\",\"productImg\":\"Product_productImg__+a4qi\",\"discount\":\"Product_discount__jixC9\",\"apology\":\"Product_apology__pj8OQ\",\"poductBtn\":\"Product_poductBtn__TxHFh\"};","import css from './Product.module.css';\n\nexport const Product = ({\n  title,\n  price,\n  discount,\n  id,\n  handleDeleteProduct,\n  openModal,\n}) => {\n  const productBg = discount ? '#f37703' : '#a4dbe2';\n\n  const productStyles = {\n    backgroundColor: productBg,\n  };\n\n  return (\n    <div className={css.product} style={productStyles}>\n      <img\n        className={css.productImg}\n        src=\"https://images.pexels.com/photos/461198/pexels-photo-461198.jpeg?dpr=2&h=480&w=640\"\n        alt=\"Tacos With Lime\"\n      />\n      <h1 className={css.productTitle}>{title}</h1>\n      {/* {discount && <h2>Discount: {discount}$</h2>} */}\n      {/* //АБО// */}\n      {discount ? (\n        <h2 className={css.discount}>Discount: {discount}$</h2>\n      ) : (\n        <p className={css.apology}>\n          Sorry, but discount on this product has expired ☹\n        </p>\n      )}\n      <h2>Price: {price}</h2>\n      <button className={css.poductBtn} type=\"button\">\n        Add product to cart\n      </button>\n      <button\n        onClick={() => openModal({ title, price, discount })}\n        className={css.poductBtn}\n        type=\"button\"\n      >\n        See the details\n      </button>\n      <button\n        onClick={() => handleDeleteProduct(id)}\n        className={css.poductBtn}\n        type=\"button\"\n      >\n        &times;\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"productList\":\"App_productList__ZcthI\"};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nconst Section = ({ children, title = false }) => {\n  return (\n    <>\n      <section className={css.section}>\n        {title && <h2>{title}</h2>}\n        {children}\n      </section>\n    </>\n  );\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProductForm_form__g-Bdi\",\"formLabel\":\"ProductForm_formLabel__MpNhX\",\"formInput\":\"ProductForm_formInput__OBcIO\",\"labelText\":\"ProductForm_labelText__TbfmW\"};","import React, { useState } from 'react';\nimport css from './ProductForm.module.css';\n\n//////Контрольована форма///////////\nconst ProductForm = ({ handleAddProduct }) => {\n  // state = {\n  //   title: '',\n  //   price: '',\n  //   hasDiscount: false,\n  //   discount: '',\n  // };\n\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [hasDiscount, setHasDiscount] = useState(false);\n  const [discount, setDiscount] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const productData = {\n      title,\n      price: Number.parseFloat(price),\n      discount: hasDiscount ? Number.parseFloat(discount) : null,\n    };\n\n    handleAddProduct(productData);\n\n    setTitle('');\n    setPrice('');\n    setHasDiscount(false);\n    setDiscount('');\n  };\n\n  const handleInputChange = evt => {\n    const value =\n      evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\n\n    const name = evt.target.name;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'price':\n        setPrice(value);\n        break;\n      case 'hasDiscount':\n        setHasDiscount(value);\n        break;\n      case 'discount':\n        setDiscount(value);\n        break;\n      default:\n        break;\n    }\n    // this.setState({\n    //   [name]: value,\n    // });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      {title === 'Spaghetti' && (\n        <h3>\n          🥳 Congrats! You won the discount promocode 20% OFF - #W4SD89R1 🤠\n        </h3>\n      )}\n      <label className={css.formLabel}>\n        <p className={css.labelText}>Title:</p>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"title\"\n          onChange={handleInputChange}\n          value={title}\n        />\n      </label>\n\n      <label className={css.formLabel}>\n        <p className={css.labelText}>Price:</p>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"price\"\n          onChange={handleInputChange}\n          value={price}\n        />\n      </label>\n\n      <label className={css.formLabel}>\n        <input\n          type=\"checkbox\"\n          name=\"hasDiscount\"\n          onChange={handleInputChange}\n          checked={hasDiscount}\n        />\n        {''}\n        Has discount?\n      </label>\n\n      {hasDiscount ? (\n        <label className={css.formLabel}>\n          <p className={css.labelText}>Discount:</p>\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"discount\"\n            onChange={handleInputChange}\n            value={discount}\n          />\n        </label>\n      ) : null}\n\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default ProductForm;\n///////////////////////////////////////////////////////\n\n//////Неконтрольована форма///////////\n// export default class ProductForm extends Component {\n//   handleSubmit = evt => {\n//     evt.preventDefault();\n//     const title = evt.currentTarget.elements.title.value;\n//     const price = evt.currentTarget.elements.price.value;\n//     const hasDiscount = evt.currentTarget.elements.hasDiscount.checked;\n//     const discount = evt.currentTarget.elements.discount.value;\n\n//     const productData = {\n//       title,\n//       price: Number.parseFloat(price),\n//       discount: hasDiscount ? Number.parseFloat(discount) : null,\n//     };\n//     this.props.handleAddProduct(productData);\n\n//     console.log('Form successfully submitedn 😀', productData);\n//   };\n\n//   render() {\n//     return (\n//       <form className={css.form} onSubmit={this.handleSubmit}>\n//         <label className={css.formLabel}>\n//           <p className={css.labelText}>Title:</p>\n//           <input className={css.formInput} type=\"text\" name=\"title\" />\n//         </label>\n\n//         <label className={css.formLabel}>\n//           <p className={css.labelText}>Price:</p>\n//           <input className={css.formInput} type=\"text\" name=\"price\" />\n//         </label>\n\n//         <label className={css.formLabel}>\n//           <input type=\"checkbox\" name=\"hasDiscount\" /> Has discount?\n//         </label>\n\n//         <label className={css.formLabel}>\n//           <p className={css.labelText}>Discount:</p>\n//           <input className={css.formInput} type=\"text\" name=\"discount\" />\n//         </label>\n\n//         <button type=\"submit\">Add</button>\n//       </form>\n//     );\n//   }\n// }\n///////////////////////////////////////////////////////\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const StyledModal = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  ///OR///\n  /* width: 100vw;\n  height: 100vh; */\n  background-color: rgba(0, 0, 0, 0.5);\n  &:hover {\n    cursor: pointer;\n  }\n\n  .modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px;\n    max-width: 450px;\n    width: 100%;\n    min-height: 450px;\n\n    background: white;\n    border-radius: 10px;\n    cursor: auto;\n  }\n\n  .closeBtn {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { StyledModal } from './Modal.Styled';\n\n// Методи життєвого циклу - це зарезервовані реактом методи(функції),\n//  які запускаються в певний період життя компоненти самим Реактом.\n\n//  componentDidMount() {} - метод життєвого цикл,\n//     що запускається один раз, після успішного монтування компонети в DOM.\n\n//     Використання:\n//     - Вішаються глобальні слухачі подій (addEventListener)\n//     - Встановлюються асинхронні таймери та лічильники (setTimeout, setInterval)\n//     - Зчитуються дані з локального сховища та встановлюємо їх в стейт\n//     - Надсилаються мережеві запити (HTTP request)\n\n//  componentWillUnmount() {} - метод життєвого цикл,\n//     що запускається один раз, перед повним видаленням компонети з DOM.\n\n//     Використання:\n//     - Прибираються глобальні слухачі подій (removeEventListener)\n//     - Прибирати асинхронні таймери та лічильники (clearTimeout, clearInterval)\n//     - Відхиляти мережеві запити (cancel HTTP request)\n\n//  componentDidUpdate(prevProps, prevState) {} - метод життєвого цикл,\n//     що запускається кожен раз, після того, як компонента оновилася(змінилися пропси, або стейт).\n\n//     Використання:\n//     - Надсилаються мережеві запити (HTTP request)\n//     - Оновлюють(синхронізуються) дані зі стейту з локальним сховищем\n\nconst Modal = ({ modalData, closeModal }) => {\n  // state = {\n  //   counter: 1,\n  // };\n  const [counter, setCounter] = useState(1);\n\n  // componentDidMount()\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      // componentWillUnmount(\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  useEffect(() => {\n    console.log('counter:' + counter);\n  }, [counter]);\n  // componentDidMount() {\n  //   // console.log('Modal has successfully been mounted');\n  //   document.body.style.overflow = 'hidden';\n  //   window.addEventListener('keydown', this.handleKeyDown);\n  // }\n\n  // componentWillUnmount() {\n  //   // console.log('Modal was successfully deleted');\n  //   window.removeEventListener('keydown', this.handleKeyDown);\n  //   document.body.style.overflow = 'auto';\n  // }\n\n  const handleIncrementProduct = () => {\n    // setCounter(counter + 1);\n    /////АБО/////\n    setCounter(prevState => prevState + 1);\n  };\n\n  const handleOverlayClick = evt => {\n    if (evt.target === evt.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return (\n    <StyledModal onClick={handleOverlayClick}>\n      <div className=\"modal\">\n        <button onClick={closeModal} type=\"button\" className=\"closeBtn\">\n          &times;\n        </button>\n        <h2>Product details</h2>\n        <div>\n          <h3>Title: {modalData.title}</h3>\n          <p>Price: {modalData.price}$</p>\n          <p>Discount: {modalData.discount}$</p>\n          <button onClick={handleIncrementProduct}>\n            Add product: {counter}\n          </button>\n        </div>\n      </div>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","import { Product } from '../components/Product/Product';\nimport css from '../components/App.module.css';\nimport Section from '../components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport ProductForm from '../components/ProductForm/ProductForm';\nimport { nanoid } from 'nanoid';\nimport Modal from '../components/Modal/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ProductsPage = () => {\n  const dispatch = useDispatch();\n  const [counterValue, setCounterValue] = useState(0);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [modalData, setModalData] = useState(null);\n\n  const products = useSelector(state => state.productsStore.products);\n\n  /////ПРИ ОНОВЛЕННІ СТОРІНКИ ПЕРЕВІРКА ЧИ КОРИСТУВАЧ НОВИЙ ТА ЩО ПОКАЗУВАТИ. АБО ЗА ЗАМОВЧУВАННЯМ МАСИВ (productsData) АБО ЙОГО ПРОДУКТИ/////\n  // const [products, setProducts] = useState(() => {\n  //   const stringifiedProducts = localStorage.getItem('products');\n  //   const parsedProducts = JSON.parse(stringifiedProducts) ?? productsData;\n  //   return parsedProducts;\n  // });\n\n  ///ПРИ ЗМІНІ МАСИВУ ПРОДУКТІВ ЙДЕ ЗАПИС У ЛОКАЛЬНЕ СХОВИЩЕ/////\n  useEffect(() => {\n    const stringifiedProducts = JSON.stringify(products);\n    localStorage.setItem('products', stringifiedProducts);\n  }, [products]);\n\n  //////ЗМЕНШЕННЯ ЛІЧИЛЬНИКА//////\n  const handleDecrement = () => {\n    if (counterValue === 0) {\n      alert('Counter value is already decremented!');\n      return;\n    }\n    setCounterValue(prevState => prevState - 1);\n    //OR//\n    // this.setState({ counterValue: this.state.counterValue - 1 });\n  };\n\n  //////ЗБІЛЬШЕННЯ ЛІЧИЛЬНИКА//////\n  const handleIncrement = () => {\n    setCounterValue(prevState => prevState + 1);\n    //OR//\n    // this.setState({ counterValue: this.state.counterValue + 1 });\n  };\n\n  //////ВИДАЛЕННЯ ПРОДУКТУ//////\n  const handleDeleteProduct = productId => {\n    const deleteProductAction = {\n      type: 'products/deleteProduct',\n      payload: productId,\n    };\n\n    dispatch(deleteProductAction);\n  };\n  //////ДОДАВАННЯ ПРОДУКТУ//////\n  const handleAddProduct = productData => {\n    const hasDuplicates = products.some(\n      product => product.title === productData.title\n    );\n\n    if (hasDuplicates) {\n      alert(`Oops! Product with title '${productData.title}' already exists`);\n      return;\n    }\n\n    const finalProduct = {\n      ...productData,\n      id: nanoid(),\n    };\n\n    const addProductAction = {\n      type: 'products/addProduct',\n      payload: finalProduct,\n    };\n    dispatch(addProductAction);\n  };\n\n  //////ВІДКРИТТЯ МОДАЛКИ//////\n  const openModal = someDataToModal => {\n    setIsOpenModal(true);\n    setModalData(someDataToModal);\n  };\n\n  //////ЗАКРИТТЯ МОДАЛКИ//////\n  const closeModal = () => {\n    setIsOpenModal(false);\n    setModalData(null);\n  };\n\n  //СОРТУВАННЯ ПРОДУКТІВ: ПЕРШІ ЗІ ЗНИЖКОЮ ЙДУТЬ//\n  const sortedProducts = [...products].sort((a, b) => b.discount - a.discount);\n  //////////////\n  return (\n    <div>\n      <Section title=\"Hello and counter\">\n        <h1>Hello</h1>\n        {counterValue >= 5 && (\n          <h3>\n            🎉 Congrats! You won the discount promocode 30% OFF #DW13S4RE7 🎊\n          </h3>\n        )}\n        <button onClick={handleDecrement}>Decrement</button>\n        <b>Counter Value: {counterValue}</b>\n        <button onClick={handleIncrement}>Increment</button>\n      </Section>\n\n      <Section title=\"Product Form\">\n        <ProductForm handleAddProduct={handleAddProduct} />\n      </Section>\n\n      <Section title=\"Product List\">\n        <div className={css.productList}>\n          {sortedProducts.map(product => {\n            return (\n              <Product\n                key={product.id}\n                title={product.title}\n                id={product.id}\n                price={product.price}\n                discount={product.discount}\n                handleDeleteProduct={handleDeleteProduct}\n                openModal={openModal}\n              />\n            );\n          })}\n        </div>\n      </Section>\n      {isOpenModal && (\n        <Modal closeModal={closeModal} modalData={modalData}></Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["Product","_ref","title","price","discount","id","handleDeleteProduct","openModal","productStyles","backgroundColor","_jsxs","className","css","style","children","_jsx","src","alt","type","onClick","_ref$title","_Fragment","handleAddProduct","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","setPrice","_useState5","_useState6","hasDiscount","setHasDiscount","_useState7","_useState8","setDiscount","handleInputChange","evt","value","target","checked","name","onSubmit","preventDefault","productData","Number","parseFloat","onChange","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","StyledModal","styled","_templateObject","_taggedTemplateLiteral","modalData","closeModal","counter","setCounter","useEffect","handleKeyDown","code","window","addEventListener","document","body","overflow","removeEventListener","console","log","currentTarget","prevState","dispatch","useDispatch","counterValue","setCounterValue","isOpenModal","setIsOpenModal","setModalData","products","useSelector","state","productsStore","stringifiedProducts","JSON","stringify","localStorage","setItem","productId","payload","someDataToModal","sortedProducts","_toConsumableArray","sort","a","b","Section","alert","ProductForm","some","product","concat","finalProduct","_objectSpread","map","Modal"],"sourceRoot":""}